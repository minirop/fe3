def rom():
	with open("../baserom.sfc", 'rb') as file:
		rom = bytearray(file.read())
	return rom

def get_range(r):
	output = get_sub_range(r & 0x0F)
	if r & 0x80:
		output = "(RANGE_UNKNOWN | {})".format(output)
	return output

def get_sub_range(r):
	match r:
		case 0:
			return 'RANGE_NONE'
		case 1:
			return 'RANGE_UNK_1'
		case 4:
			return 'RANGE_UNK_4'
		case 9:
			return 'RANGE_1'
		case 10:
			return 'RANGE_2'
		case 11:
			return 'RANGE_1_2'
		case 12:
			return 'RANGE_ANY'
	raise ValueError("Unknown range {}".format(r))

def get_type(type):
	TYPES = {
		0x00: 'TYPE_NONE',
		0x01: 'TYPE_SWORD',
		0x02: 'TYPE_LANCE',
		0x04: 'TYPE_BOW',
		0x08: 'TYPE_STAFF',
		0x10: 'TYPE_MAGIC',
		0x11: 'TYPE_MAGIC_SWORD',
		0x20: 'TYPE_ITEM',
		0x40: 'TYPE_AXE',
		0x80: 'TYPE_DRAGON_BREATH'
	}
	return TYPES[type]

ITEMS = ['ITEM_IRON_SWORD', 'ITEM_STEEL_SWORD', 'ITEM_SILVER_SWORD', 'ITEM_RAPIER', 'ITEM_KILLER_SWORD', 'ITEM_DEVIL_SWORD', 'ITEM_BROKEN_SWORD', 'ITEM_MASTER_SWORD', 'ITEM_LADY_SWORD', 'ITEM_THUNDER_SWORD', 'ITEM_MERCURIUS', 'ITEM_FALCHION', 'ITEM_ARMOR_KILLER', 'ITEM_DRAGON_KILLER', 'ITEM_SWORD_KILLER', 'ITEM_IRON_LANCE', 'ITEM_STEEL_LANCE', 'ITEM_SILVER_LANCE', 'ITEM_KNIGHT_KILLER', 'ITEM_JAVELIN', 'ITEM_BROKEN_LANCE', 'ITEM_KILLER_LANCE', 'ITEM_THIN_LANCE', 'ITEM_GRADIVUS', 'ITEM_IRON_BOW', 'ITEM_BROKEN_BOW', 'ITEM_STEEL_BOW', 'ITEM_SILVER_BOW', 'ITEM_KILLER_BOW', 'ITEM_PARTHIA', 'ITEM_IRON_AXE', 'ITEM_STEEL_AXE', 'ITEM_HAND_AXE', 'ITEM_SILVER_AXE', 'ITEM_DEVIL_AXE', 'ITEM_BROKEN_AXE', 'ITEM_THUNDERBOLT', 'ITEM_QUICK_RAIN', 'ITEM_STONE_HEDGE', 'ITEM_FIRE_GUN', 'ITEM_ELEPHANT', 'ITEM_FIRE_BREATH', 'ITEM_ICE_BREATH', 'ITEM_DARK_BREATH', 'ITEM_MIST_BREATH', 'ITEM_FIRE', 'ITEM_THUNDER', 'ITEM_BLIZZARD', 'ITEM_SHAVER', 'ITEM_ELFIRE', 'ITEM_THORON', 'ITEM_BOLGANONE', 'ITEM_EXCALIBUR', 'ITEM_AURA', 'ITEM_STARLIGHT', 'ITEM_IMHULLU', 'ITEM_DULAM', 'ITEM_RESIRE', 'ITEM_METEOR', 'ITEM_WORM', 'ITEM_EARTH_ORB', 'ITEM_SHIELD_OF_SEALS', 'ITEM_DARK_ORB', 'ITEM_FIRE_EMBLEM', 'ITEM_HEAL', 'ITEM_RECOVER', 'ITEM_PHYSIC', 'ITEM_MEND', 'ITEM_WARP', 'ITEM_MAGIC_SHIELD', 'ITEM_HAMMERNE', 'ITEM_FORTIFY', 'ITEM_SILENCE', 'ITEM_RESCUE', 'ITEM_AUM', 'ITEM_UNLOCK', 'ITEM_THIEF_STAFF', 'ITEM_WATCH_STAFF', 'ITEM_AGAIN_STAFF', 'ITEM_FIRE_DRAGON_STONE', 'ITEM_AUM_UNK', 'ITEM_ICE_DRAGON_STONE', 'ITEM_FLYING_DRAGON_STONE', 'ITEM_EARTH_DRAGON_STONE', 'ITEM_DARK_DRAGON_STONE', 'ITEM_DIVINE_DRAGON_STONE', 'ITEM_DEMON_DRAGON_STONE', 'ITEM_VULNERARY', 'ITEM_DOOR_KEY', 'ITEM_SILVER_KEY', 'ITEM_BRIDGE_KEY', 'ITEM_TREASURE_KEY', 'ITEM_ENERGY_RING', 'ITEM_SHIELD_RING', 'ITEM_SECRET_BOOK', 'ITEM_SPEED_RING', 'ITEM_AMULET', 'ITEM_ANGELIC_ROBE', 'ITEM_GODDESS_ICON', 'ITEM_MANUAL', 'ITEM_BOOTS', 'ITEM_PURE_WATER', 'ITEM_KNIGHT_CREST', 'ITEM_HERO_CREST', 'ITEM_GUIDING_RING', 'ITEM_ELYSIAN_WHIP', 'ITEM_ORIONS_BOLT', 'ITEM_EARTH_ORB_UNK', 'ITEM_LIFE_ORB', 'ITEM_IOTE_SHIELD', 'ITEM_AQUARIUS_ORB', 'ITEM_PISCES_ORB', 'ITEM_ARIES_ORB', 'ITEM_TAURUS_ORB', 'ITEM_GEMINI_ORB', 'ITEM_CANCER_ORB', 'ITEM_LEO_ORB', 'ITEM_VIRGO_ORB', 'ITEM_LIBRA_ORB', 'ITEM_SCORPIO_ORB', 'ITEM_SAGITTARIUS_ORB', 'ITEM_CAPRICORN_ORB', 'ITEM_AUM_FRAGMENT', 'ITEM_SILVER_CARD', 'ITEM_MEMBER_CARD', 'ITEM_LIGHT_ORB', 'ITEM_STAR_ORB']

def get_items():
	return ITEMS

def get_item(id):
	if id == 0xFF: return 'UNDEFINED'
	if id >= len(ITEMS):
		return "${:02X}".format(id)
	return ITEMS[id]

UNITS = ['MARTH', 'CAEDA', 'JAGEN', 'CAIN', 'ABEL', 'DRAUG', 'GORDIN', 'RICKARD', 'WRYS', 'BORD', 'CORD', 'BARST', 'CASTOR', 'OGMA', 'DARROS', 'JULIAN', 'LENA', 'MERRIC', 'NAVARRE', 'HARDIN', 'WOLF', 'SEDGAR', 'ROSHEA', 'VYLAND', 'BANTU', 'CAESAR', 'RADD', 'MIDIA', 'CATRIA', 'MARIA', 'MINERVA', 'LINDE', 'JEORGE', 'DOLPH', 'MACELLAN', 'TOMAS', 'BOAH', 'ARRAN', 'SAMSON', 'BECK', 'XANE', 'WENDELL', 'EST', 'ASTRAM', 'MATTHIS', 'ROGER', 'JAKE', 'PALLA', 'TIKI', 'LORENZ', 'ELICE', 'GOTOH', 'RICKARD_ENEMY', 'JEORGE_ENEMY', 'NAVARRE_ENEMY', 'MATTHIS_ENEMY', 'SHEENA_ENEMY', 'SAMSON_ENEMY', 'UNKNOWN', 'UNKNOWN', 'MINERVA_ENEMY', 'UNKNOWN', 'ASTRAM_ENEMY', 'PALLA_ENEMY', 'UNKNOWN_41', 'EST_ENEMY', 'UNKNOWN_42', 'UNKNOWN_43', 'UNKNOWN_44', 'ENEMY_45', 'GHARNEF', 'BOSS_47', 'BOSS_48', 'MICHALIS', 'BOSS_4A', 'ENEMY_4B', 'ENEMY_4C', 'ENEMY_4D', 'ENEMY_4E', 'ENEMY_4F', 'ENEMY_50', 'ENEMY_51', 'ENEMY_52', 'ENEMY_53', 'ENEMY_54', 'ENEMY_55', 'ENEMY_56', 'ENEMY_57', 'ENEMY_58', 'ENEMY_59', 'BOSS_5A', 'BOSS_5B', 'ENEMY_5C', 'ENEMY_5D', 'ENEMY_5E', 'ENEMY_5F', 'ENEMY_60', 'ENEMY_61', 'ENEMY_62', 'ENEMY_63', 'ENEMY_64', 'ENEMY_65', 'ENEMY_66', 'ENEMY_67', 'ENEMY_68', 'ENEMY_69', 'ENEMY_6A', 'CAMUS', 'CECIL', 'LUKE', 'RODERICK', 'RYAN', 'WARREN', 'ENEMY', 'ENEMY', 'YULIYA', 'JUBELO', 'SIRIUS', 'ENEMY_76', 'MARISHA', 'ENEMY_78', 'SAMUEL', 'ENEMY_7A', 'PHINA', 'ENEMY_7C', 'ENEMY_7D', 'ENEMY_7E', 'ENEMY_7F', 'SHEENA', 'MARTH_BOOK2', 'ARRAN_BOOK2', 'GORDIN_BOOK2', 'DRAUG_BOOK2', 'LINDE_BOOK2', 'MATTHIS_BOOK2', 'JULIAN_BOOK2', 'CATRIA_BOOK2', 'OGMA_BOOK2', 'CASTOR_BOOK2', 'RICKARD_BOOK2', 'JEORGE_BOOK2', 'WENDELL_BOOK2', 'NAVARRE_BOOK2', 'ASTRAM_BOOK2', 'CAEDA_BOOK2', 'CAIN_BOOK2', 'BANTU_BOOK2', 'UNKNOWN', 'MERRIC_BOOK2', 'ARLEN', 'MINERVA_BOOK2', 'XANE_BOOK2', 'TIKI_BOOK2', 'ABEL_BOOK2', 'UNKNOWN', 'SAMSON_BOOK2', 'ENEMY_9C', 'VYLAND_BOOK2', 'ROSHEA_BOOK2', 'ENEMY', 'MEDEA_BOOK2', 'ENEMY_A1', 'ENEMY_A2', 'ENEMY_A3', 'ENEMY_A4', 'ENEMY_A5', 'ENEMY_A6', 'NYNA', 'MARIA_BOOK2', 'ELICE_BOOK2', 'LENA_BOOK2', 'PALLA_BOOK2']

def get_unit(id):
	if id == 0xFF: return 'UNDEFINED'
	if id >= len(UNITS):
		return "${:02X}".format(id)
	return "UNIT_{}".format(UNITS[id])

def get_class(id):
	if id == 0xFF: return 'UNDEFINED'
	CLASSES = ['CLASS_LORD', 'CLASS_FIGHTER', 'CLASS_SOLDIER', 'CLASS_CAVALIER', 'CLASS_PALADIN', 'CLASS_DISMOUNTED_KNIGHT_MALE', 'CLASS_DISMOUNTED_KNIGHT_FEMALE', 'CLASS_ARMOR_KNIGHT', 'CLASS_GENERAL', 'CLASS_PEGASUS_KNIGHT', 'CLASS_DRACOKNIGHT', 'CLASS_HUNTER', 'CLASS_SNIPER', 'CLASS_ARCHER', 'CLASS_HORSEMAN', 'CLASS_MANAKETE_MALE', 'CLASS_FIRE_DRAGON', 'CLASS_MERCENARY', 'CLASS_HERO', 'CLASS_THIEF', 'CLASS_FREELANCER', 'CLASS_DANCER', 'CLASS_SISTER', 'CLASS_MAGE_FEMALE', 'CLASS_BISHOP_FEMALE', 'CLASS_MAGE_MALE', 'CLASS_BISHOP_MALE', 'CLASS_SAGE', 'CLASS_MANAKETE_FEMALE', 'CLASS_BANDIT', 'CLASS_PIRATE', 'CLASS_BARBARIAN', 'CLASS_BERSERKER', 'CLASS_DARK_KNIGHT', 'CLASS_DARK_MAGE', 'CLASS_BALLISTICIAN', 'CLASS_EMPEROR', 'CLASS_GUARDIAN', 'CLASS_ICE_DRAGON', 'CLASS_SEA_DRAGON', 'CLASS_FLYING_DRAGON', 'CLASS_EARTH_DRAGON', 'CLASS_DARK_DRAGON', 'CLASS_DIVINE_DRAGON', 'CLASS_DEMON_DRAGON']
	return CLASSES[id]

def get_name(id):
	if id == 0xFF: return 'UNDEFINED'
	NAMES = ['NAME_MARTH', 'NAME_CAEDA', 'NAME_JAGEN', 'NAME_CAIN', 'NAME_ABEL', 'NAME_DRAUG', 'NAME_GORDIN', 'NAME_RICKARD', 'NAME_WRYS', 'NAME_BORD', 'NAME_CORD', 'NAME_BARST', 'NAME_CASTOR', 'NAME_OGMA', 'NAME_DARROS', 'NAME_JULIAN', 'NAME_LENA', 'NAME_MERRIC', 'NAME_NAVARRE', 'NAME_HARDIN', 'NAME_WOLF', 'NAME_SEDGAR', 'NAME_ROSHEA', 'NAME_VYLAND', 'NAME_BANTU', 'NAME_CAESAR', 'NAME_RADD', 'NAME_MIDIA', 'NAME_CATRIA', 'NAME_MARIA', 'NAME_MINERVA', 'NAME_LINDE', 'NAME_JEORGE', 'NAME_DOLPH', 'NAME_MACELLAN', 'NAME_TOMAS', 'NAME_BOAH', 'NAME_ARRAN', 'NAME_SAMSON', 'NAME_BECK', 'NAME_XANE', 'NAME_WENDELL', 'NAME_EST', 'NAME_ASTRAM', 'NAME_MATTHIS', 'NAME_ROGER', 'NAME_JAKE', 'NAME_PALLA', 'NAME_TIKI', 'NAME_LORENZ', 'NAME_ELICE', 'NAME_GOTOH', 'NAME_GAZZAK', 'NAME_WYLAR', 'NAME_GRUST', 'NAME_GOMER', 'NAME_GALDER', 'NAME_SOOTHSIRE', 'NAME_MERACH', 'NAME_HARMEIN', 'NAME_EMEREUS', 'NAME_BENTHEON', 'NAME_KANNIVAL', 'NAME_MANNU', 'NAME_ZHAROV', 'NAME_KHOZEN', 'NAME_HEIMLER', 'NAME_GRIGAS', 'NAME_JIOL', 'NAME_VOLZHIN', 'NAME_HOLLSTADT', 'NAME_STERNLIN', 'NAME_HYMAN', 'NAME_XEMCEL', 'NAME_ORRIDYON', 'NAME_CAMUS', 'NAME_MICHALIS', 'NAME_MORZAS', 'NAME_GHARNEF', 'NAME_MEDEUS', 'NAME_DOLHR', 'NAME_GRA', 'NAME_PYRATHI', 'NAME_CHIASMIR', 'NAME_SABLE_KNIGHT', 'NAME_KHADEIN', 'NAME_IRON_KNIGHT', 'NAME_DRAGOON', 'NAME_OPPONENT', 'NAME_MACEDON', 'NAME_PEGASUS', 'NAME_RUFFIAN', 'NAME_RAMAN', 'NAME_MAGE', 'NAME_CURATE_ARMY', 'NAME_ROGUE', 'NAME_FAKE_GHARNEF', 'NAME_CECIL', 'NAME_LUKE', 'NAME_RODERICK', 'NAME_RYAN', 'NAME_WARREN', 'NAME_BRAVE', 'NAME_RUMEL', 'NAME_RUCKE', 'NAME_YULIYA', 'NAME_JUBELO', 'NAME_SIRIUS', 'NAME_GAIL', 'NAME_PAIKING', 'NAME_MARISHA', 'NAME_TORAS', 'NAME_SAMUEL', 'NAME_LANG', 'NAME_PHINA', 'NAME_DAHL', 'NAME_THIEF_74', 'NAME_YODEL', 'NAME_ARLEN', 'NAME_STRAY_DRAGON', 'NAME_SAND_TRIBE', 'NAME_BERSERKER', 'NAME_BANDIT', 'NAME_THIEF', 'NAME_FIRE_DRAGON', 'NAME_ICE_DRAGON', 'NAME_ICE_WARRIOR', 'NAME_EIBEL', 'NAME_SHEENA', 'NAME_EARTH_DRAGON', 'NAME_DARK_PRIEST', 'NAME_WILLOW', 'NAME_AKANEIA_SOLDIER', 'NAME_ORLEANS_SOLDIER', 'NAME_NYNA', 'NAME_KHADEIN_MERCENARY', 'NAME_FIRE_TRIBE', 'NAME_MOUNTAIN_TRIBE', 'NAME_NEHRING', 'NAME_DARK_TRIBE', 'NAME_DEMON_DRAGON', 'NAME_BODYGUARD']
	return NAMES[id]

def get_portrait(id):
	if id == 0xFF: return 'UNDEFINED'
	PORTRAIT = ['MARTH', 'CAEDA', 'JAGEN', 'CAIN', 'ABEL', 'DRAUG', 'GORDIN', 'RICKARD', 'PIRATE', 'BORD', 'BARST', 'CORD', 'CASTOR', 'OGMA', 'AXEBRO', 'JULIAN', 'LENA', 'MERRIC', 'NAVARRE', 'HARDIN', 'WOLF', 'SEDGAR', 'ROSHEA', 'VYLAND', 'BANTU', 'CAESAR', 'RADD', 'MIDIA', 'CATRIA', 'MARIA', 'MINERVA', 'LINDE', 'JEORGE', 'DOLPH', 'MACELLAN', 'TOMAS', 'BOAH', 'ARRAN', 'SAMSON', 'BECK', 'XANE', 'WENDELL', 'EST', 'ASTRAM', 'MATTHIS', 'HORSEMAN', 'WYVERN', 'PALLA', 'TIKI', 'LORENZ', 'ELICE', 'GOTOH', 'GAZZAK', 'THIEF', 'ARCHER', 'GOMER', 'GUARD_ARCHER', 'UNUSED_BLACK', 'MERACH', 'HARMEIN', 'EMEREUS', 'GUARD_ARCHER_AIMING', 'KANNIVAL', 'KHOZEN_2', 'NEHRING', 'KHOZEN', 'DOUBLE_AXE', 'CATAPULT', 'JIOL', 'VOLZHIN', 'HOLLSTADT', 'PEGASUS_KNIGHT', 'HYMAN', 'XEMCEL', 'UNUSED_BLACK_2', 'CAMUS', 'MICHALIS', 'MORZAS', 'GHARNEF', 'MEDEUS', 'ARMOUR', 'ZHAROV', 'GENERAL', 'SMALL', 'UNUSED_WHITE', 'SWORD_AND_SHIELD', 'UNUSED_WHITE_2', 'GREEN_MAGE', 'WOMAN_WITH_STAFF', 'ELECTRIC_MAGE', 'FIRE_RED_MAGE', 'WINGED_MAGE', 'DRAGON', 'HORSEMAN_JAVELIN', 'HORSEMAN_JAVELIN_2', 'HORSEMAN_BOW', 'MALLEDUS', 'NYNA', 'KING_OF_TALYS', 'KING_OF_AURELIS', 'VILLAGER_1ST_BALD_MAN', 'VILLAGER_2ND_BALD_MAN', 'VILLAGER_3RD_BALD_MAN', 'VILLAGER_OLD_MAN', 'VILLAGER_OLD_WOMAN', 'VILLAGER_UNCLE', 'VILLAGER_AUNTIE', 'VILLAGER_MALE', 'VILLAGER_FEMALE', 'FIGHTMONGER', 'ARMOURER', 'STRANGE_OLD_WOMAN', 'VENDOR', 'SAVE_GIRL', 'GIRL_UNKNOWN_SHOP', 'GIRL_WITH_HOOD', 'GUARD', 'CECIL', 'LUKE', 'RODERICK', 'RYAN', 'WARREN', 'LUMEL', 'LYKKE', 'YULIYA', 'JUBELO', 'SIRIUS', 'GAIL', 'MARISHA', 'TORUS', 'SAMUEL', 'LANG', 'PHINA', 'DALL', 'YODEL', 'ARLEN', 'EIBEL', 'SHEENA', 'WILLOW', 'MARTH_BOOK_2', 'CAEDA_BOOK_2', 'LINDE_BOOK_2', 'MERRIC_BOOK_2', 'TIKI_BOOK_2', 'MARTH_BOOK_2_DETERMINED', 'MEDEUS_DRAGON', 'MINERVA_HAND', 'HARDIN_BOOK_2']
	return "PORTRAIT_{}_ID".format(PORTRAIT[id])

def get_ai(id):
	if id == 0xFF: return 'UNDEFINED'
	return "${:02X}".format(id)

def unknown(id):
	if id == 0xFF: return 'UNDEFINED'
	return id

def cpu_to_prg(addr):
	bank = (addr >> 16) - 0x80
	addr = addr & 0xFFFF
	prg_bank = bank // 2
	if bank % 2 == 0:
		addr -= 0x8000
	addr += prg_bank << 16
	return addr
